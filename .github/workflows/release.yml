name: Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (GitHub Packages)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"
          scope: "@codeiqlabs"

      - name: Install dependencies
        run: |
          npm ci || (
            echo "npm ci failed, clearing cache and retrying..."
            rm -rf node_modules
            npm cache clean --force
            npm ci
          )
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build package
        run: |
          npm run build || (
            echo "Build failed, likely due to Rollup optional dependencies bug. Reinstalling..."
            rm -rf node_modules
            npm cache clean --force
            npm ci
            npm run build
          )

        # Safety: re-run the same gates on main before publishing
      - name: Prettier check
        run: npm run format:check

      - name: Run tests
        run: npm run test:all

      # Will either:
      #  - open/refresh a "Version Packages" PR when there are pending changesets, or
      #  - publish after that PR is merged (creating a Git tag + GitHub Release).
      - name: Create release PR or publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npm run release
          title: "Version Packages"
          commit: "Version Packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }} # needed for GH Packages (npm)

      - name: Push tags
        if: steps.changesets.outputs.published == 'true'
        run: git push --follow-tags

      - name: Send release notification
        if: steps.changesets.outputs.published == 'true'
        run: |
          echo "ðŸš€ Package published successfully!"
          echo "Published packages: ${{ steps.changesets.outputs.publishedPackages }}"
